name: pipeline_ci

env:
  MOTHERDUCK_TOKEN: ${{ secrets.MOTHERDUCK_TOKEN }}
  DBT_PROJECT_DIR: ${{ github.workspace }}/dbt_pipeline
  DBT_PROFILES_DIR: ${{ github.workspace }}/dbt_pipeline/.dbt
  BI_PROJECT_DIR: ${{ github.workspace }}/evidence_bi
  PAGE_DEPLOY_DIR: ${{ github.workspace }}/evidence_bi/build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  # pages: write
  # id-token: write
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  run-pipeline:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v4

      # Action1: run dbt pipeline
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
        
      - name: Install dbt dependencies
        run: pip install -r requirements.txt
  
      - name: Set up dbt profiles
        # "initializeCommand": "mkdir -p /root/dbt_pipeline/.dbt && cp dbt_pipeline/profiles.yml /root/dbt_pipeline/.dbt/"
        run: |
          mkdir -p ${{ env.DBT_PROJECT_DIR }}/.dbt
          cp ${{ env.DBT_PROJECT_DIR }}/profiles.yml ${{ env.DBT_PROFILES_DIR }}/profiles.yml
        shell: bash

      # - name: Run dbt deps
      #   run: dbt deps
      #   working-directory: ${{ env.DBT_PROJECT_DIR }}
  
      # - name: Run dbt test
      #   run: dbt test
      #   working-directory: ${{ env.DBT_PROJECT_DIR }}

      # - name: Run dbt
      #   run: dbt run
      #   working-directory: ${{ env.DBT_PROJECT_DIR }}

      - name: Generate dbt doc
        run: dbt docs generate --target-path ${{ env.PAGE_DEPLOY_DIR }}/pipeline
        working-directory: ${{ env.DBT_PROJECT_DIR }}

      # Action2: build dashboard
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: evidence_bi/package-lock.json

      - name: Install npm dependencies
        run: npm install
        working-directory: ${{ env.BI_PROJECT_DIR }}

      - name: Build dashboard
        env:
          EVIDENCE_SOURCE__trash_wheel__token: ${{ env.MOTHERDUCK_TOKEN }}
        run: |
          npm run sources
          npm run build
        working-directory: ${{ env.BI_PROJECT_DIR }}
      
      # - name: Move build to site folder
      #   run: mv ${{ env.BI_PROJECT_DIR }}/build/* ${{ github.workspace }}/site/dashboard
      
      # Action3: Upload artifact
      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.PAGE_DEPLOY_DIR }}
        

  deploy-page:
    needs: run-pipeline
    permissions:
      pages: write      
      id-token: write   
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:     
      # Github Page deploy
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Deploy site to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
